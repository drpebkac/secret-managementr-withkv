name: Prod Operations - Secrets Checker - Infra Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - bicep/secrets-management
  pull_request:
    branches:
      - main
    paths:
      - bicep/secrets-management

env:
  template_folder_path: bicep/secrets-management # path to directory containing bicep template
  template_file_name: deploy-sm-infra.bicep # name of the bicep template file including extension
  location: "australiaeast" # location for resource deployment in azure
  subscription_id: "e6dffdaa-5ee9-4ea5-9330-1f148f3f2884" # azure subscription id (not required for tenant level deployments)
  oidc_app_reg_client_id: "a1091385-06b9-4f70-ae46-bc38aa29ca44" # client id of the azure application registration used to authenticate to azure using oidc, refer to https://learn.microsoft.com/en-us/azure/active-directory/develop/workload-identity-federation-create-trust?pivots=identity-wif-apps-methods-azp#github-actions
  azure_tenant_id: "34846174-e57d-4384-9114-59a7f95fcada" # azure ad tenant/directory id
  environment: "prod" # name of the github environment
  deployment_name: "operations_platform_secrets-checker" # name of the arm deployment"
  skip_tests: "'apiVersions Should Be Recent','Template Should Not Contain Blanks','Parameter Types Should Be Consistent','Parameters Must Be Referenced','Min And Max Value Are Numbers','Location Should Not Be Hardcoded','Password params must be secure','Outputs Must Not Contain Secrets', 'URIs Should Be Properly Constructed'"
  mode: "operations" # the contextual mode of the deployment
  parameter_file_path: bicep/secret-management/deploy-sm-infra.parameters.biceppraram


jobs:
  initialise_vars:
    runs-on: ubuntu-latest
    outputs:
      template_folder_path: ${{ env.template_folder_path }}
      template_file_name: ${{ env.template_file_name }}
      parameter_file_path: ${{ env.parameter_file_path }}
      location: ${{ env.location }}
      subscription_id: ${{ env.subscription_id }}
      oidc_app_reg_client_id: ${{ env.oidc_app_reg_client_id }}
      azure_tenant_id: ${{ env.azure_tenant_id }}
      environment: ${{ env.environment }}
      deployment_name: ${{ env.deployment_name }}
      skip_tests: ${{ env.skip_tests }}
      mode: ${{ env.mode }}
    steps:
      - name: Initialise Variables
        run: echo "Initialising environment variables"

  build:
    needs: initialise_vars
    permissions:
      id-token: write
      contents: read
    uses: drpebkac/secret-managementr-withkv/.github/workflows/build.yml@main
    with:
      test_trigger: ${{ github.event_name }}
      template_file_path: ${{ needs.initialise_vars.outputs.template_folder_path }}/${{ needs.initialise_vars.outputs.template_file_name }}
      skip_tests: ${{ needs.initialise_vars.outputs.skip_tests }}
      mode: ${{ needs.initialise_vars.outputs.mode }}
      continue_on_failed_tests: false
      oidc_app_reg_client_id: ${{ needs.initialise_vars.outputs.oidc_app_reg_client_id }}
      azure_tenant_id: ${{ needs.initialise_vars.outputs.azure_tenant_id }}
      parameter_file_path: ${{ needs.initialise_vars.outputs.parameter_file_path }}

  deploy:
    needs: [initialise_vars, build]
    if: ${{ github.ref == 'refs/heads/main' }}
    permissions:
      id-token: write
      contents: read
    uses: drpebkac/secret-managementr-withkv/.github/workflows/deploy.yml@main
    with:
      environment: ${{ needs.initialise_vars.outputs.environment }}
      location: ${{ needs.initialise_vars.outputs.location }}
      subscription_id: ${{ needs.initialise_vars.outputs.subscription_id }}
      template_file_name: ${{ needs.initialise_vars.outputs.template_file_name }}
      deployment_name: ${{ needs.initialise_vars.outputs.deployment_name }}
      oidc_app_reg_client_id: ${{ needs.initialise_vars.outputs.oidc_app_reg_client_id }}
      azure_tenant_id: ${{ needs.initialise_vars.outputs.azure_tenant_id }}
      mode: ${{ needs.initialise_vars.outputs.mode }}