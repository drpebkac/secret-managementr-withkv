name: build

on:
  workflow_call:
    inputs:
      template_folder_path:
        description: "path to template file"
        type: string
        required: true
      template_file_name:
        description: "name of the bicep template"
        type: string
        required: true
      parameter_file_name:
        description: "name of the parameter file"
        type: string
        required: false
        default: ""
      continue_on_failed_tests:
        description: "silence errors from testing and continue pipeline"
        type: boolean
        required: false
        default: false
      skip_tests:
        description: "arm-ttk tests to skip, e.g. 'Template Should Not Contain Blank'"
        type: string
        required: false
        default: none
      test_trigger:
        description: "github event that will trigger tests to run, e.g. pull request"
        type: string
        required: true
      mode:
        description: "the contextual mode of the build, e.g. whether it is part of the initial build or ongoing operations"
        type: string
        required: false
        default: build
      environment:
        description: "github environment for build jobs"
        type: string
        required: false
        default: build

env:
  build_folder: build
  test_result_folder: results

jobs:
  run_build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
    
      - name: Get all changed param files
        id: changed-markdown-files
        uses: tj-actions/changed-files@v42
        with:
          # Avoid using single or double quotes for multiline patterns
          files: ${{ inputs.template_folder_path }}/**

      - name: List all changed files markdown files
        if: steps.changed-markdown-files.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-markdown-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

      - name: Build Bicep into ARM
        env:
          BUILDFOLDERPATH: ${{ runner.temp }}/${{ env.build_folder }}
          TESTFOLDERPATH: ${{ runner.temp }}/${{ env.test_result_folder }}
          ALL_CHANGED_FILES: ${{ steps.changed-markdown-files.outputs.all_changed_files }}
          ANY_CHANGED_FILES: ${{ steps.changed-markdown-files.outputs.any_changed }}
          PARAM_FILE_PATH: "${{ inputs.template_folder_path }}/${{ inputs.parameter_file_name }}"
        run: |
          mkdir '${{ env.BUILDFOLDERPATH }}'
          az bicep build --file ${{ inputs.template_folder_path }}/${{ inputs.template_file_name }}.bicep --outdir '${{ env.BUILDFOLDERPATH }}/main.json'

          if ("${{ inputs.mode }}" -ne "operations"){
            if ("${{ env.PARAM_FILE_PATH }}" -like "*.bicepparam"){
                bicep build-params "${{ env.PARAM_FILE_PATH }}" --outfile ${{ env.BUILDFOLDERPATH }}/parameters.json
              }
            elseif ("${{ env.PARAM_FILE_PATH }}" -like "*parameters.json"){
                Copy-Item -Path "${{ env.PARAM_FILE_PATH }}" -Destination '${{ env.BUILDFOLDERPATH }}/parameters.json'
              }
          }
          #If condition for 
          # copy parameter files to build folder if operations deployment
          if ("${{ inputs.mode }}" -eq "operations" && "${{ env.ANY_CHANGED_FILES }}" -eq "true" ){
            $files = "${{ env.ALL_CHANGED_FILES }}"
            $splitFiles =$files.Split(" ")
            write-output $splitFiles
            foreach ($file in $splitFiles){
                if ($file -like "*.bicepparam"){                          
                  write-output $file
                  bicep build-params $file --outfile ${{ env.BUILDFOLDERPATH }}/parameters.json
                    }
                  }
                }
                elseif ("${{ inputs.mode }}" -eq "operations" && "${ANY_CHANGED_FILES}" -ne "true" ){
                  $files = Get-ChildItem "${{ inputs.template_folder_path }}" | Where-Object {$_.Name -like "*.parameters.json" -or $_.Name -like "*.bicepparam"}
                  foreach ($file in $files){
                  if ($file.FullName -like "*.bicepparam"){
                  bicep build-params $file --outfile ${{ env.BUILDFOLDERPATH }}/parameters.json
                }
                else{
                  Copy-Item -Path $file.FullName -Destination '${{ env.BUILDFOLDERPATH }}/parameters.json'
                }
              }
          }
          if ("${{ inputs.mode }}" -eq "operations" && "${{ inputs.parameter_file_name }}" -ne "" ){
            if ("${{ env.PARAM_FILE_PATH }}" -like "*.bicepparam"){
                bicep build-params "${{ env.PARAM_FILE_PATH }}" --outfile "${{ env.BUILDFOLDERPATH }}/parameters.json"
                }
            elseif ("${{ env.PARAM_FILE_PATH }}" -like "*.json"){
                Copy-Item -Path "${{ env.PARAM_FILE_PATH }}" -Destination '${{ env.BUILDFOLDERPATH }}/parameters.json'
              }
          }

          Get-ChildItem ${{ env.BUILDFOLDERPATH }}
        shell: pwsh

      - name: Upload artifact for deployment
        env:
          BUILDFOLDERPATH: ${{ runner.temp }}/${{ env.build_folder }}
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: ${{ env.BUILDFOLDERPATH }}
      
