name: build

on:
  workflow_call:
    inputs:
      template_folder_path:
        description: "path to template file"
        type: string
        required: true
      template_file_name:
        description: "name of the bicep template"
        type: string
        required: true
      parameter_file_name:
        description: "name of the parameter file"
        type: string
        required: false
        default: ""
      continue_on_failed_tests:
        description: "silence errors from testing and continue pipeline"
        type: boolean
        required: false
        default: false
      skip_tests:
        description: "arm-ttk tests to skip, e.g. 'Template Should Not Contain Blank'"
        type: string
        required: false
        default: none
      test_trigger:
        description: "github event that will trigger tests to run, e.g. pull request"
        type: string
        required: true
      mode:
        description: "the contextual mode of the build, e.g. whether it is part of the initial build or ongoing operations"
        type: string
        required: false
        default: build
      environment:
        description: "github environment for build jobs"
        type: string
        required: false
        default: build

env:
  build_folder: build
  test_result_folder: results

jobs:
  run_build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
    
      - name: Get all changed param files
        id: changed-markdown-files
        uses: tj-actions/changed-files@v42
        with:
          # Avoid using single or double quotes for multiline patterns
          files: ${{ inputs.template_folder_path }}/${{ inputs.parameter_file_name }}

      - name: List all changed files markdown files
        if: steps.changed-markdown-files.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-markdown-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

      

