name: deploy

on:
  workflow_call:
    inputs:
      environment:
        description: "github environment for deployment jobs"
        type: string
        required: true
      location:
        description: "location for resource deployment"
        type: string
        required: true
      deployment_name:
        description: "name of the arm deployment"
        type: string
        required: true
      inline_params:
        description: "string representation of additional parameters, refer to https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/deploy-cli#parameters"
        type: string
        required: false
        default: ""
      az_deployment_type:
        description: "type of azure deployment"
        type: string
        required: false
        default: subscription
      mode:
        description: "the contextual mode of the deployment, either deploy or operations"
        type: string
        required: false
        default: deploy
      management_group_id:
        description: "management group id for azure deployment"
        type: string
        required: false
        default: ""
      resource_group_name:
        description: "resource group name for azure deployment"
        type: string
        required: false
        default: ""

jobs: 
  run_preview:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Set current date as environment variable
        run: echo "current_time=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV
        shell: bash

      - name: Checkout
        uses: actions/checkout@v3.3.0

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ${{ runner.workspace }}/deploy

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

      - name: What-If Deploy to Azure (Operations)
        if: ${{ inputs.mode }} == 'operations'
        run: |
          $ErrorActionPreference = 'stop'
          $files = Get-ChildItem ${{ runner.workspace }}/deploy | Where-Object {$_.Name -like "*.json"}
          $files
  #         foreach ($file in $files) {
  #           if ('${{ inputs.az_deployment_type }}' -eq "subscription" ){
  #           $paramFile = Get-Content $file.FullName | ConvertFrom-Json
  #           write-output $paramFile
  #           $subId = $paramFile.parameters.subscriptionId.value
  #           write-output $subId
  #           az account set --subscription $subId
  #             az deployment sub what-if `
  #               --name '${{ inputs.deployment_name }}-${{ env.current_time }}' `
  #               --location '${{ inputs.location }}' `
  #               --subscription $subId `
  #               --template-file ${{ runner.workspace }}/deploy/$template --parameters $file.FullName
  #           }
  #           if ('${{ inputs.az_deployment_type }}' -eq "tenant" ){
  #             az deployment tenant what-if `
  #               --name '${{ inputs.deployment_name }}-${{ env.current_time }}' `
  #               --location '${{ inputs.location }}' `
  #               --template-file ${{ runner.workspace }}/deploy/$template --parameters $file.FullName
  #           }
  #           if ('${{ inputs.az_deployment_type }}' -eq "managementgroup" ){
  #             az deployment mg what-if `
  #               --name '${{ inputs.deployment_name }}-${{ env.current_time }}' `
  #               --location '${{ inputs.location }}' `
  #               --management-group-id '${{ inputs.management_group_id }}' `
  #               --template-file ${{ runner.workspace }}/deploy/$template --parameters $file.FullName
  #           }
  #           if ('${{ inputs.az_deployment_type }}' -eq "resourcegroup" ){
  #             az account set --subscription '${{ inputs.subscription_id }}'
  #             az deployment group what-if `
  #               --name '${{ inputs.deployment_name }}-${{ env.current_time }}' `
  #               --resource-group '${{ inputs.resource_group_name }}' `
  #               --template-file ${{ runner.workspace }}/deploy/$template --parameters $file.FullName
  #           }
  #         }
  #       shell: pwsh

  #     - name: What-If Deploy to Azure
  #       if: inputs.mode == 'deploy'
  #       run: |
  #         $ErrorActionPreference = 'stop'
  #         $paramFile = Get-ChildItem ${{ runner.workspace }}/deploy | Where-Object {$_.Name -like "*.parameters.json"}
  #         $template = "${{ inputs.template_file_name }}".Replace(".bicep",".json")

  #         if ('${{ inputs.az_deployment_type }}' -eq "subscription" ){
  #           az account set --subscription ${{ inputs.subscription_id}}
  #           az deployment sub what-if `
  #             --name '${{ inputs.deployment_name }}-${{ env.current_time }}' `
  #             --location '${{ inputs.location }}' `
  #             --subscription '${{ inputs.subscription_id }}' `
  #             --template-file ${{ runner.workspace }}/deploy/$template --parameters $paramFile
  #         }
  #         if ('${{ inputs.az_deployment_type }}' -eq "tenant" ){
  #           az deployment tenant what-if `
  #             --name '${{ inputs.deployment_name }}-${{ env.current_time }}' `
  #             --location '${{ inputs.location }}' `
  #             --template-file ${{ runner.workspace }}/deploy/$template --parameters $paramFile
  #         }
  #         if ('${{ inputs.az_deployment_type }}' -eq "managementgroup" ){
  #           az deployment mg what-if `
  #             --name '${{ inputs.deployment_name }}-${{ env.current_time }}' `
  #             --location '${{ inputs.location }}' `
  #             --management-group-id '${{ inputs.management_group_id }}' `
  #             --template-file ${{ runner.workspace }}/deploy/$template --parameters $paramFile
  #         }
  #           if ('${{ inputs.az_deployment_type }}' -eq "resourcegroup" ){
  #             az account set --subscription '${{ inputs.subscription_id }}'
  #             az deployment group what-if `
  #               --name '${{ inputs.deployment_name }}-${{ env.current_time }}' `
  #               --resource-group '${{ inputs.resource_group_name }}' `
  #               --template-file ${{ runner.workspace }}/deploy/$template --parameters $paramFile
  #           }
  #       shell: pwsh

  # run_deploy:
  #   needs: [run_preview]
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: ${{ inputs.environment }}
  #   steps:
  #     - name: Set current date as environment variable
  #       run: echo "current_time=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV
  #       shell: bash
        
  #     - name: Checkout
  #       uses: actions/checkout@v3.3.0

  #     - name: Download Artifact
  #       uses: actions/download-artifact@v3.0.1
  #       with:
  #         name: deploy
  #         path: ${{ runner.workspace }}/deploy

  #     - name: Azure CLI Login
  #       uses: azure/login@v2
  #       with:
  #         client-id: ${{ secrets.CLIENT_ID }}
  #         tenant-id: ${{ secrets.TENANT_ID }}
  #         subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

  #     - name: Deploy to Azure (Operations)
  #       if: inputs.mode == 'operations'
  #       run: |
  #         $ErrorActionPreference = 'stop'
  #         $template = "${{ inputs.template_file_name }}".Replace(".bicep",".json")
  #         $files = Get-ChildItem ${{ runner.workspace }}/deploy/param | Where-Object {$_.Name -like "*.parameters.json"}
  #         foreach ($file in $files) {
  #           if ('${{ inputs.az_deployment_type }}' -eq "subscription" ){
  #             $paramFile = Get-Content $file.FullName | ConvertFrom-Json
  #             write-output $paramFile
  #             $subId = $paramFile.parameters.subscriptionId.value
  #             write-output $subId
  #             az account set --subscription $subId
  #             az deployment sub create `
  #               --name '${{ inputs.deployment_name }}-${{ env.current_time }}' `
  #               --location '${{ inputs.location }}' `
  #               --subscription $subId `
  #               --template-file ${{ runner.workspace }}/deploy/$template --parameters $file.FullName
  #           }
  #           if ('${{ inputs.az_deployment_type }}' -eq "tenant" ){
  #             az deployment tenant create `
  #               --name '${{ inputs.deployment_name }}-${{ env.current_time }}' `
  #               --location '${{ inputs.location }}' `
  #               --template-file ${{ runner.workspace }}/deploy/$template --parameters $file.FullName
  #           }
  #           if ('${{ inputs.az_deployment_type }}' -eq "managementgroup" ){
  #           az deployment mg create `
  #             --name '${{ inputs.deployment_name }}-${{ env.current_time }}' `
  #             --location '${{ inputs.location }}' `
  #             --management-group-id '${{ inputs.management_group_id }}' `
  #             --template-file ${{ runner.workspace }}/deploy/$template --parameters $file.FullName
  #           }
  #           if ('${{ inputs.az_deployment_type }}' -eq "resourcegroup" ){
  #             az account set --subscription '${{ inputs.subscription_id }}'
  #             az deployment group create `
  #               --name '${{ inputs.deployment_name }}-${{ env.current_time }}' `
  #               --resource-group '${{ inputs.resource_group_name }}' `
  #               --template-file ${{ runner.workspace }}/deploy/$template --parameters $file.FullName
  #           }
  #         }
  #       shell: pwsh

  #     - name: Deploy to Azure
  #       if: inputs.mode == 'deploy'
  #       run: |
  #         $ErrorActionPreference = 'stop'
  #         $paramFile = Get-ChildItem ${{ runner.workspace }}/deploy | Where-Object {$_.Name -like "*.parameters.json"}
  #         $template = "${{ inputs.template_file_name }}".Replace(".bicep",".json")

  #         if ('${{ inputs.az_deployment_type }}' -eq "subscription" ){
  #           az account set --subscription ${{ inputs.subscription_id}}
  #           az deployment sub create `
  #             --name '${{ inputs.deployment_name }}_${{ env.current_time }}' `
  #             --location '${{ inputs.location }}' `
  #             --subscription '${{ inputs.subscription_id }}' `
  #             --template-file ${{ runner.workspace }}/deploy/$template --parameters $paramFile
  #         }
  #         if ('${{ inputs.az_deployment_type }}' -eq "tenant" ){
  #           az deployment tenant create `
  #             --name '${{ inputs.deployment_name }}_${{ env.current_time }}' `
  #             --location '${{ inputs.location }}' `
  #             --template-file ${{ runner.workspace }}/deploy/$template --parameters $paramFile
  #         }
  #         if ('${{ inputs.az_deployment_type }}' -eq "managementgroup" ){
  #         az deployment mg create `
  #           --name '${{ inputs.deployment_name }}_${{ env.current_time }}' `
  #           --location '${{ inputs.location }}' `
  #           --management-group-id '${{ inputs.management_group_id }}' `
  #           --template-file ${{ runner.workspace }}/deploy/$template --parameters $paramFile
  #         }
  #         if ('${{ inputs.az_deployment_type }}' -eq "resourcegroup" ){
  #           az account set --subscription '${{ inputs.subscription_id }}'
  #           az deployment group create `
  #             --name '${{ inputs.deployment_name }}_${{ env.current_time }}' `
  #             --resource-group '${{ inputs.resource_group_name }}' `
  #             --template-file ${{ runner.workspace }}/deploy/$template --parameters $paramFile
  #         }
  #       shell: pwsh
